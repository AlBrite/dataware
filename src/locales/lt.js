export default {
    accepted: "Il campo :attribute deve essere accettato.",
    date: "Il campo deve essere una data valida.",
    url: "Il campo deve essere un URL valido.",
    ip: "Il campo deve essere un indirizzo IP valido.",
    uuid: "Il campo deve essere un UUID valido.",
    integer: "Il campo deve essere un numero intero.",
    alpha_spaces: "Il campo può contenere solo lettere e spazi.",
    timezone: "Il campo deve essere un fuso orario valido.",
    credit_card: "Il campo deve essere un numero di carta di credito valido.",
    phone: "Il campo deve essere un numero di telefono valido.",
    contains: "Il campo deve contenere :value.",
    not_contains: "Il campo non deve contenere :value.",
    min: {
        numeric: "Il valore deve essere almeno :min.",
        string: "La lunghezza deve essere di almeno :min caratteri.",
        array: "L'array deve contenere almeno :min elementi.",
        file: "La dimensione del file deve essere di almeno :min byte.",
        files: "Le dimensioni dei file devono essere di almeno :min byte.",
    },
    unique: "Il valore deve essere unico.",
    exists: "Il valore deve esistere nel set di dati.",
    max: {
        numeric: "Il valore non deve essere maggiore di :max.",
        string: "La lunghezza non deve superare :max caratteri.",
        array: "L'array non deve avere più di :max elementi.",
        file: "La dimensione del file non deve superare :max byte.",
        files: "Le dimensioni dei file non devono superare :max byte.",
    },
    image: "Il campo :attribute deve essere un'immagine.",
    video: "Il campo :attribute deve essere un video.",
    audio: "Il campo :attribute deve essere un file audio.",
    digits: "Il campo :attribute deve contenere :digits cifre.",
    file: "Il campo :attribute deve essere un file.",
    files: "Il campo :attribute deve contenere almeno un file.",
    filled: "Il campo :attribute deve avere un valore.",
    mimes: "Il campo :attribute deve essere un file di tipo: :values.",
    mimetypes: "Il campo :attribute deve essere un file di tipo: :values.",
    gt: {
        numeric: "Il valore deve essere maggiore di :gt.",
        string: "La lunghezza deve essere maggiore di :gt caratteri.",
        array: "L'array deve avere più di :gt elementi.",
        file: "La dimensione del file deve essere maggiore di :gt byte.",
        files: "Le dimensioni dei file devono essere maggiori di :gt byte.",
    },
    lt: {
        numeric: "Il valore deve essere minore di :lt.",
        string: "La lunghezza deve essere minore di :lt caratteri.",
        array: "L'array deve avere meno di :lt elementi.",
        file: "La dimensione del file deve essere minore di :lt byte.",
        files: "Le dimensioni dei file devono essere minori di :lt byte.",
    },
    gte: {
        numeric: "Il valore deve essere maggiore o uguale a :gte.",
        string: "La lunghezza deve essere maggiore o uguale a :gte caratteri.",
        array: "L'array deve contenere almeno :gte elementi.",
        file: "La dimensione del file deve essere maggiore o uguale a :gte byte.",
        files: "Le dimensioni dei file devono essere maggiori o uguali a :gte byte.",
    },
    lte: {
        numeric: "Il valore deve essere minore o uguale a :lte.",
        string: "La lunghezza deve essere minore o uguale a :lte caratteri.",
        array: "L'array non deve avere più di :lte elementi.",
        file: "La dimensione del file deve essere minore o uguale a :lte byte.",
        files: "Le dimensioni dei file devono essere minori o uguali a :lte byte.",
    },
    alpha: "Il campo può contenere solo lettere.",
    alpha_: "Il campo può contenere solo lettere e trattini bassi.",
    alpha_dash: "Il campo può contenere solo lettere, numeri, trattini e trattini bassi.",
    alpha_num: "Il campo può contenere solo lettere e numeri.",
    boolean: "Il campo deve essere un valore booleano.",
    confirmed: "La conferma del campo non corrisponde.",
    between: {
        numeric: "Il valore deve essere compreso tra :min e :max.",
        string: "La lunghezza deve essere compresa tra :min e :max caratteri.",
        array: "L'array deve contenere tra :min e :max elementi.",
        file: "La dimensione del file deve essere compresa tra :min e :max byte.",
        files: "Le dimensioni dei file devono essere comprese tra :min e :max byte.",
    },
    password: {
        length: "La password deve contenere almeno :length caratteri.",
        letters: "La password deve contenere almeno una lettera.",
        mixed: "La password deve contenere almeno una maiuscola e una minuscola.",
        numbers: "La password deve contenere almeno un numero.",
        symbols: "La password deve contenere almeno un simbolo.",
        uncompromised: "La password fornita è apparsa in una violazione dei dati. Scegli un'altra.",
    },
    email: "Il campo deve essere un indirizzo email valido.",
    in_array: "Il valore del campo deve essere uno dei seguenti: :values.",
    in: "Il valore del campo deve essere uno dei seguenti: :values.",
    regex: "Il formato del campo è non valido.",
    same: "Il campo deve corrispondere al campo :other.",
    ends_with: "Il campo deve terminare con uno dei seguenti: :values.",
    starts_with: "Il campo deve iniziare con uno dei seguenti: :values.",
    not_in: "Il valore del campo non deve essere uno dei seguenti: :values.",
    required_if: "Il campo è richiesto se :other è uguale a :value.",
    required: "Il campo è richiesto.",
    uppercase: "Il campo può contenere solo lettere maiuscole.",
    lowercase: "Il campo può contenere solo lettere minuscole.",
    url: "Il campo deve essere un URL valido.",
    uuid: "Il campo deve essere un UUID valido.",
    range: "Il valore deve essere compreso tra :min e :max.",
    multiple_of: "Il valore deve essere un multiplo di :number.",
    active_url: "Il campo :attribute non è un URL valido.",
    numeric: "Il campo :attribute deve essere un numero.",
    pattern: "Il modello previsto è :pattern.",
    required_unless: "Il campo :attribute è richiesto a meno che :other non sia in :values.",
    required_with: "Il campo :attribute è richiesto quando :values è presente.",
    required_with_all: "Il campo :attribute è richiesto quando :values sono presenti.",
    required_without: "Il campo :attribute è richiesto quando :values è assente.",
    required_without_all: "Il campo :attribute è richiesto quando nessuno dei :values è presente.",
    after: "Il campo :attribute deve essere una data successiva a :date.",
    before: "Il campo :attribute deve essere una data precedente a :date.",
};